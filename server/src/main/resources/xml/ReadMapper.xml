<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcl.demo.sbDemo.dao.ReadMapper" >
  <resultMap id="BaseResultMap" type="com.lcl.demo.sbDemo.entity.Read" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <idArg column="book_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <idArg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_id, user_id, create_time, update_time, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.lcl.demo.sbDemo.entity.ReadKey" >
    select 
    <include refid="Base_Column_List" />
    from read
    where id = #{id,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.ReadKey" >
    delete from read
    where id = #{id,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcl.demo.sbDemo.entity.Read" >
    insert into read (id, book_id, user_id, 
      create_time, update_time, state
      )
    values (#{id,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lcl.demo.sbDemo.entity.Read" >
    insert into read
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcl.demo.sbDemo.entity.Read" >
    update read
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.Read" >
    update read
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>