<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcl.demo.sbDemo.dao.NoteMapper" >
  <resultMap id="BaseResultMap" type="com.lcl.demo.sbDemo.entity.Note" >
    <constructor >
      <idArg column="note_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="begin_page" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="end_page" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    note_id, date, begin_page, end_page, content, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from note
    where note_id = #{noteId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from note
    where note_id = #{noteId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcl.demo.sbDemo.entity.Note" >
    insert into note (note_id, date, begin_page, 
      end_page, content, create_time, 
      update_time)
    values (#{noteId,jdbcType=BIGINT}, #{date,jdbcType=DATE}, #{beginPage,jdbcType=INTEGER}, 
      #{endPage,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lcl.demo.sbDemo.entity.Note" >
    insert into note
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noteId != null" >
        note_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="beginPage != null" >
        begin_page,
      </if>
      <if test="endPage != null" >
        end_page,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noteId != null" >
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="beginPage != null" >
        #{beginPage,jdbcType=INTEGER},
      </if>
      <if test="endPage != null" >
        #{endPage,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcl.demo.sbDemo.entity.Note" >
    update note
    <set >
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="beginPage != null" >
        begin_page = #{beginPage,jdbcType=INTEGER},
      </if>
      <if test="endPage != null" >
        end_page = #{endPage,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where note_id = #{noteId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.Note" >
    update note
    set date = #{date,jdbcType=DATE},
      begin_page = #{beginPage,jdbcType=INTEGER},
      end_page = #{endPage,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where note_id = #{noteId,jdbcType=BIGINT}
  </update>
</mapper>