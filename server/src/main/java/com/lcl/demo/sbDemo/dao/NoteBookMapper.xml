<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcl.demo.sbDemo.dao.NoteBookMapper">
  <resultMap id="BaseResultMap" type="com.lcl.demo.sbDemo.entity.NoteBook">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="note_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="book_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, note_id, book_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBookKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from note_book
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBookKey">
    delete from note_book
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    insert into note_book (id, note_id, book_id, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{noteId,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    insert into note_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noteId != null">
        note_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="noteId != null">
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    update note_book
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    update note_book
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.lcl.demo.sbDemo.entity.NoteBook">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="note_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="book_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, note_id, book_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBookKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from note_book
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBookKey">
    delete from note_book
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    insert into note_book (id, note_id, book_id, 
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{noteId,jdbcType=BIGINT}, #{bookId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    insert into note_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noteId != null">
        note_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="noteId != null">
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    update note_book
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    update note_book
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
      and note_id = #{noteId,jdbcType=BIGINT}
      and book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.lcl.demo.sbDemo.entity.NoteBook">
    <constructor>
      <idArg column="note_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="book_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    note_id, book_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBookKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from note_book
    where note_id = #{noteId,jdbcType=INTEGER}
      and book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBookKey">
    delete from note_book
    where note_id = #{noteId,jdbcType=INTEGER}
      and book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    insert into note_book (note_id, book_id, create_time, 
      update_time)
    values (#{noteId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    insert into note_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        note_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        #{noteId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    update note_book
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where note_id = #{noteId,jdbcType=INTEGER}
      and book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcl.demo.sbDemo.entity.NoteBook">
    update note_book
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where note_id = #{noteId,jdbcType=INTEGER}
      and book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>